version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: eduvate_db
    environment:
      POSTGRES_DB: eduvate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - eduvate_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST (API REST)
  postgrest:
    image: postgrest/postgrest:latest
    container_name: eduvate_postgrest
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@db:5432/eduvate
      PGRST_DB_ANON_ROLE: anon
      # JWT secret must be at least 32 characters long
      PGRST_JWT_SECRET: "mysuperlongsecretkey_1234567890abcdef"
    ports:
      - "8095:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - eduvate_network

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_SUPABASE_URL: http://localhost:8095
        VITE_SUPABASE_PUBLISHABLE_KEY: "mysuperlongsecretkey_1234567890abcdef"
    container_name: eduvate_frontend
    ports:
      - "3000:80"
    depends_on:
      postgrest:
        condition: service_started
    networks:
      - eduvate_network

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: eduvate_adminer
    ports:
      - "8094:8080"
    depends_on:
      - db
    networks:
      - eduvate_network

volumes:
  postgres_data:

networks:
  eduvate_network:
    driver: bridge
